#include <stdio.h>
#include <string.h>
#include <ctype.h>

#define MAX_EMAIL_LENGTH 1024
#define MAX_KEYWORDS 10
#define SPAM_THRESHOLD 3

// List of spam-related keywords
const char *spam_keywords[MAX_KEYWORDS] = {
    "free", "offer", "buy", "prize", "winner", "discount", "claim", "limited", "exclusive", "promotion"
};

// Function to convert a string to lowercase for case-insensitive comparison
void to_lowercase(char *str) {
    for (int i = 0; str[i]; i++) {
        str[i] = tolower(str[i]);
    }
}

// Function to check if a word is a spam keyword
int is_spam_word(const char *word) {
    for (int i = 0; i < MAX_KEYWORDS; i++) {
        if (strcmp(word, spam_keywords[i]) == 0) {
            return 1;  // Word matches a spam keyword
        }
    }
    return 0;  // Word does not match any spam keyword
}

// Function to tokenize the email content and count spam keywords
int classify_email(const char *email_text) {
    char email_copy[MAX_EMAIL_LENGTH];
    strcpy(email_copy, email_text);
    to_lowercase(email_copy);  // Convert email content to lowercase

    char *token = strtok(email_copy, " \t\n");
    int spam_count = 0;

    // Tokenize and check each word for spam keywords
    while (token != NULL) {
        if (is_spam_word(token)) {
            spam_count++;
        }
        token = strtok(NULL, " \t\n");
    }

    // If the count of spam keywords exceeds a threshold, classify as spam
    return spam_count >= SPAM_THRESHOLD ? 1 : 0;  // 1 for spam, 0 for not spam
}

int main() {
    FILE *file = fopen("emails.txt", "r");  // Open the dataset file
    if (file == NULL) {
        printf("Error opening file.\n");
        return 1;
    }

    char email[MAX_EMAIL_LENGTH];

    // Read each email and classify it
    while (fgets(email, sizeof(email), file)) {
        // Split the email into label and content
        char *label = strtok(email, " \t\n");
        char *email_content = strtok(NULL, "\n");

        if (email_content == NULL) {
            continue;  // Skip if there is no email content
        }

        // Classify the email
        int is_spam = classify_email(email_content);

        // Print results
        printf("Email: %s\n", email_content);
        printf("True Label: %s\n", label);
        printf("Classified as: %s\n", is_spam ? "Spam" : "Not Spam");
        printf("\n");
    }

    fclose(file);  // Close the file
    return 0;
}
